// SPDX-License-Identifier: GPL-2.0-only
/*
 * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
 */
/dts-v1/;

#include "am33xx.dtsi"
#include "am335x-bone-common.dtsi"
#include "am335x-boneblack-common.dtsi"

#include <dt-bindings/iio/adc/adi,ad5940.h>

&am33xx_pinmux {
	spi0_pins: spi0_pins {
		pinctrl-single,pins = <
			AM33XX_IOPAD(0x950, PIN_INPUT | MUX_MODE7) /* (A17) spi0_sclk.gpio0[2] */
			AM33XX_IOPAD(0x954, PIN_INPUT | MUX_MODE7) /* (B17) spi0_d0.gpio0[3] */
			AM33XX_IOPAD(0x958, PIN_INPUT | MUX_MODE7) /* (B16) spi0_d1.gpio0[4] */
			AM33XX_IOPAD(0x95c, PIN_INPUT | MUX_MODE7) /* (A16) spi0_cs0.gpio0[5] */
		>;
	};

	ad5940_pins: ad5940_pins {
		pinctrl-single,pins = <
			AM33XX_PADCONF(AM335X_PIN_GPMC_AD12, PIN_INPUT_PULLUP, MUX_MODE7)
		>;
	};
};

/ {
	model = "TI AM335x BeagleBone Black";
	compatible = "ti,am335x-bone-black", "ti,am335x-bone", "ti,am33xx";

	spi3: spi3 {
		compatible = "spi-gpio";
		gpio-sck = <&gpio0 2 GPIO_ACTIVE_HIGH>;
		gpio-miso = <&gpio0 3 GPIO_ACTIVE_HIGH>;
		gpio-mosi = <&gpio0 4 GPIO_ACTIVE_HIGH>;
		cs-gpios = <&gpio1 16 GPIO_ACTIVE_HIGH &gpio0 5 GPIO_ACTIVE_HIGH>;
		num-chipselects = <2>;
		status = "okay";

		pinctrl-names = "default";
		pinctrl-0 = <&spi0_pins>;
		#address-cells = <1>;
		#size-cells = <0>;

		spidev@0 {
			compatible = "spidev";
			spi-max-frequency = <10000000>;
			reg = <0>;
		};

		ad5940@1 {
			compatible = "adi,ad5940";
			reg = <1>;
			spi-max-frequency = <10000000>;

			regulators {
				ad5940_hsadc_vref: hsadc_ref {
					regulator-name = "1.82v hsadc ref";
					regulator-min-microvolt = <1820000>;
					regulator-max-microvolt = <1820000>;
				};
				hsadc_limit {
					regulator-name = "1.1v hsadc current limit";
					regulator-min-microvolt = <1100000>;
					regulator-max-microvolt = <1100000>;
				};
				lpadc_ref {
					regulator-name = "1.82v lpadc ref";
					regulator-min-microvolt = <1820000>;
					regulator-max-microvolt = <1820000>;
				};
				hsadc_discharge {
					regulator-name = "1.82v hsadc discharge";
					regulator-min-microvolt = <1820000>;
					regulator-max-microvolt = <1820000>;
				};
				hsadc_com {
					regulator-name = "1.1v hsadc common";
					regulator-min-microvolt = <1100000>;
					regulator-max-microvolt = <1100000>;
				};
				lpadc_com {
					regulator-name = "1.1v lpadc common";
					regulator-min-microvolt = <1100000>;
					regulator-max-microvolt = <1100000>;
				};
				lpadc_discharge {
					regulator-name = "1.1v lpadc discharge";
					regulator-min-microvolt = <1100000>;
					regulator-max-microvolt = <1100000>;
				};
				ref_out {
					regulator-name = "1.82v ref output";
					regulator-min-microvolt = <1820000>;
					regulator-max-microvolt = <1820000>;
				};
			};

			ad5940_dac_vref: dac_ref {
				compatible = "regulator-fixed";
				regulator-name = "fixed-supply";
				regulator-min-microvolt = <1820000>;
				regulator-max-microvolt = <1820000>;
				regulator-boot-on;
			};

			ad5940-dac {
				compatible = "adi,ad5940-dac";

				vref-supply = <&ad5940_dac_vref>;
			};

			ad5940-pinctrl {
				compatible = "adi,ad5940-pinctrl";

				ad5940-gpio {
					gpio-controller;
					#gpio-cells = <2>;	//for client to pass parameters.
				};

				pinctrl_gp0int0: gp0int0 {
					functions = "int0out";
					groups = "gpio0";
				};
				pinctrl_gp0seq0: gp0seq0 {
					functions = "seq0trig";
					groups = "gpio0";
				};
				pinctrl_gp0sync0: gp0sync0 {
					functions = "sync0out";
					groups = "gpio0";
				};
				pinctrl_gp0gpio0: gp0gpio0 {
					functions = "gpio0";
					groups = "gpio0";
				};
				pinctrl_gp1gpio1: gp1gpio1 {
					functions = "gpio1";
					groups = "gpio1";
				};
				pinctrl_gp1seq1: gp1seq1 {
					functions = "seq1trig";
					groups = "gpio1";
				};
				pinctrl_gp1sync1: gp1int0 {
					functions = "int0out";
					groups = "gpio1";
				};
				pinctrl_gp1deepsleep: gp1deepsleep {
					functions = "deepsleep";
					groups = "gpio1";
				};
				pinctrl_gp2por: gp2por {
					functions = "por";
					groups = "gpio2";
				};
				pinctrl_gp2seq2: gp2seq2 {
					functions = "seq2trig";
					groups = "gpio2";
				};
				pinctrl_gp2sync2: gp2sync2 {
					functions = "sync2out";
					groups = "gpio2";
				};
				pinctrl_gp2extclk: gp2extclk {
					functions = "extclk";
					groups = "gpio2";
				};
				pinctrl_gp3gpio3: gp3gpio3 {
					functions = "gpio3";
					groups = "gpio3";
				};
				pinctrl_gp3seq3: gp3seq3 {
					functions = "seq3trig";
					groups = "gpio3";
				};
				pinctrl_gp3sync3: gp3sync3 {
					functions = "sync3out";
					groups = "gpio3";
				};
				pinctrl_gp3int0: gp3int0 {
					functions = "int0out";
					groups = "gpio3";
				};
				pinctrl_gp4gpio4: gp4gpio4 {
					functions = "gpio4";
					groups = "gpio4";
				};
				pinctrl_gp4seq0: gp4seq0 {
					functions = "seq0trig";
					groups = "gpio4";
				};
				pinctrl_gp4sync4: gp4sync4 {
					functions = "sync4out";
					groups = "gpio4";
				};
				pinctrl_gp4int1: gp4int1 {
					functions = "int1out";
					groups = "gpio4";
				};
				pinctrl_gp5gpio5: gp5gpio5 {
					functions = "gpio5";
					groups = "gpio5";
				};
				pinctrl_gp5seq1: gp5seq1 {
					functions = "seq1trig";
					groups = "gpio5";
				};
				pinctrl_gp5sync5: gp5sync5 {
					functions = "sync5out";
					groups = "gpio5";
				};
				pinctrl_gp5extclk: gp5extclk {
					functions = "extclk";
					groups = "gpio5";
				};
				pinctrl_gp6gpio6: gp6gpio6 {
					functions = "gpio6";
					groups = "gpio6";
				};
				pinctrl_gp6seq2: gp6seq2 {
					functions = "seq2trig";
					groups = "gpio6";
				};
				pinctrl_gp6sync6: gp6sync6 {
					functions = "sync6out";
					groups = "gpio6";
				};
				pinctrl_gp6int0: gp6int0 {
					functions = "int0out";
					groups = "gpio6";
				};
				pinctrl_gp7gpio7: gp7gpio7 {
					functions = "gpio7";
					groups = "gpio7";
				};
				pinctrl_gp7seq3: gp7seq3 {
					functions = "seq3trig";
					groups = "gpio7";
				};
				pinctrl_gp7sync7: gp7sync7 {
					functions = "sync0out";
					groups = "gpio7";
				};
				pinctrl_gp7: gp7int1 {
					functions = "int1out";
					groups = "gpio7";
				};
			};

			ad5940_intc: interrupt-controller {
				compatible = "adi,ad5940-intc";

				interrupt-parent = <&gpio0>;
				interrupts = <27 IRQ_TYPE_EDGE_FALLING>;

				interrupt-controller;
				#interrupt-cells = <1>;

				// adi,interrupt-polarity;
			};

			ad5940-adc {
				compatible = "adi,ad5940-adc";

				vref-supply = <&ad5940_hsadc_vref>;
				interrupt-parent = <&ad5940_intc>;
				interrupts = <0>;

				#address-cells = <1>;
				#size-cells = <0>;

				channel@0 {
					reg = <0>;
					diff-channels = <AD5940_ADC_INPUTP_VCE0
							AD5940_ADC_INPUTN_VBIAS0>;
					channel-name = "Vce-Vbias";
				};

				channel@1 {
					reg = <1>;
					diff-channels = <AD5940_ADC_INPUTP_VRE0
							AD5940_ADC_INPUTN_VBIAS0>;
					channel-name = "Vre-Vbias";
				};

				channel@2 {
					reg = <2>;
					diff-channels = <AD5940_ADC_INPUTP_SE0
							AD5940_ADC_INPUTN_VBIAS0>;
					channel-name = "Vse-Vbias";
				};

				channel@3 {
					reg = <3>;
					diff-channels = <AD5940_ADC_INPUTP_DE0
							AD5940_ADC_INPUTN_VBIAS0>;
					channel-name = "Vde-Vbias";
				};

				channel@4 {
					reg = <4>;
					diff-channels = <AD5940_ADC_INPUTP_AIN0
							AD5940_ADC_INPUTN_VBIAS0>;
					channel-name = "ain0-Vbias";
				};

				channel@5 {
					reg = <5>;
					diff-channels = <AD5940_ADC_INPUTP_AIN1
							AD5940_ADC_INPUTN_VBIAS0>;
					channel-name = "ain1-Vbias";
				};

				channel@6 {
					reg = <6>;
					diff-channels = <AD5940_ADC_INPUTP_AIN2
							AD5940_ADC_INPUTN_VBIAS0>;
					channel-name = "ain2-Vbias";
				};

				channel@7 {
					reg = <7>;
					diff-channels = <AD5940_ADC_INPUTP_AIN3
							AD5940_ADC_INPUTN_VBIAS0>;
					channel-name = "ain3-Vbias";
				};

				channel@8 {
					reg = <8>;
					diff-channels = <AD5940_ADC_INPUTP_AIN4
							AD5940_ADC_INPUTN_VBIAS0>;
					channel-name = "ain4-Vbias";
				};

				channel@9 {
					reg = <9>;
					diff-channels = <AD5940_ADC_INPUTP_AIN6
							AD5940_ADC_INPUTN_VBIAS0>;
					channel-name = "ain6-Vbias";
				};

				channel@10 {
					reg = <10>;
					diff-channels = <AD5940_ADC_INPUTP_LPTIA_LP
							AD5940_ADC_INPUTN_LPTIA>;
					channel-name = "Low power TIA DC";
				};

				channel@11 {
					reg = <11>;
					diff-channels = <AD5940_ADC_INPUTP_LPTIA
							AD5940_ADC_INPUTN_LPTIA>;
					channel-name = "Low power TIA AC";
				};

				channel@12 {
					reg = <12>;
					diff-channels = <AD5940_ADC_INPUTP_HSTIA
							AD5940_ADC_INPUTN_HSTIA>;
					channel-name = "High Speed TIA";
				};

				channel@13 {
					reg = <13>;
					diff-channels = <AD5940_ADC_INPUTP_TEMP
							AD5940_ADC_INPUTN_VBIAS0>;
					channel-name = "Temperature";
				};
			};
		};
	};
};

&cpu0_opp_table {
	/*
	 * All PG 2.0 silicon may not support 1GHz but some of the early
	 * BeagleBone Blacks have PG 2.0 silicon which is guaranteed
	 * to support 1GHz OPP so enable it for PG 2.0 on this board.
	 */
	oppnitro-1000000000 {
		opp-supported-hw = <0x06 0x0100>;
	};
};
